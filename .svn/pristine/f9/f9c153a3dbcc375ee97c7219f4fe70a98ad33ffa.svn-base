package com.chechemotel.util;

import java.sql.SQLException;

import java.sql.ResultSet;

import com.mysql.jdbc.Statement;

import java.sql.DriverManager;

import java.io.IOException;

import java.util.Properties;

import java.io.InputStream;

import com.mysql.jdbc.PreparedStatement;

import com.mysql.jdbc.Connection;

import java.util.List;

import org.apache.commons.codec.binary.Base64;



  public class DBConnUtil {
	  
	  private static String jdbcDriver = "";      //定义连接信息
	    private static String jdbcUrl = "";

	    private static String jdbcUser = "";

	    private static String jdbcPasswd = "";
	    
	    static{
	        InputStream is = null;
	        try {
	            is = DBConnUtil.class.getClassLoader().getResourceAsStream("dbconfig.properties");   //加载database.properties文件
	            Properties p = new Properties();
	            p.load(is);
	           // jdbcDriver = p.getProperty("jdbc.driver");    //赋值
	            jdbcDriver="com.mysql.jdbc.Driver";
	            jdbcUrl = p.getProperty("jdbc.url.jeecg");
	            jdbcUser = p.getProperty("jdbc.username.jeecg");
	            jdbcPasswd = p.getProperty("jdbc.password.jeecg");

	        } catch (IOException e) {
	            e.printStackTrace();
	        } finally {
	            if(is != null){
	                try {
	                    is.close();   //  关闭is
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	        }
	    }
	    
	    public static Connection getConn(){   // 建立连接方法
	        Connection conn = null;
	        try {
	            Class.forName(jdbcDriver);
	            conn = (Connection) DriverManager.getConnection(jdbcUrl, jdbcUser, jdbcPasswd);
	        } catch (ClassNotFoundException e) {
	            e.printStackTrace();
	        } catch (SQLException e) {
	            e.printStackTrace();
	        }
	        return conn;
	    }
	    
	    public static void closeAll(ResultSet rs ,Statement st,Connection conn){  //关闭连接（用于增删改）
	        if(rs != null){
	            try {
	                rs.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	        if(st != null){
	            try {
	                st.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	        if(conn != null){
	            try {
	                conn.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	    }
	    
	    public static void closeAll(ResultSet rs ,PreparedStatement ps,Connection conn){  // 关闭连接（用于查）
	        if(rs != null){
	            try {
	                rs.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	        if(ps != null){
	            try {
	                ps.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	        if(conn != null){
	            try {
	                conn.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	    }
}
